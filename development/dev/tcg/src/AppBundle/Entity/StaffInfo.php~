<?php
// src/AppBundle/Entity/User.php
namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * @ORM\Table(name="staff_info")
 * @ORM\Entity(repositoryClass="AppBundle\Entity\UserRepository")
 */
class StaffInfo implements UserInterface, \Serializable
{
    /**
     * @ORM\Column(type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @ORM\Column(type="string", length=25, unique=true)
     */
    private $account;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $password;

    /**
     * @ORM\Column(name="is_active", type="boolean")
     */
    private $isActive;

    /**
     * @ORM\Column(type="string", length=255)
     */
    private $roles;

    private $rolesArray;

    /**
     * @ORM\Column(type="string", length=25, unique=true)
     */
    private $staffId;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $name;

    /**
     * @ORM\Column(type="string", length=25)
     */
    private $personalId;

    /**
     * @ORM\Column(type="string")
     */
    private $photo;

    /**
     * @ORM\Column(type="integer")
     */
    private $gender;

    /**
     * @ORM\Column(type="string", length=25)
     */
    private $tel;

    /**
     * @ORM\Column(type="date")
     */
    private $birthday;

    /**
     * @ORM\Column(type="string", length=255)
     */
    private $address;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $mergencyContactName;

    /**
     * @ORM\Column(type="string", length=25)
     */
    private $mergencyContactTel;

    /**
     * @ORM\Column(type="string", length=255)
     */
    private $mergencyContactAddress;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $department;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $team;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $title;



    public function __construct()
    {
        $this->isActive = true;
        // may not be needed, see section on salt below
        // $this->salt = md5(uniqid(null, true));
    }

    public function getUsername()
    {
        return $this->username;
    }

    public function getSalt()
    {
        // you *may* need a real salt depending on your encoder
        // see section on salt below
        return null;
    }

    public function getPassword()
    {
        return $this->password;
    }

    public function getRoles()
    {
       /* if(null===$this->rolesArray) {
            $this->rolesArray = explode(',',$this->roles);
        }
        if(empty($this->rolesArray)) {
            $this->rolesArray[] = 'ROLE_GUEST ';
        }
        return $this->rolesArray;*/
        return array('ROLE_USER');
    }

    public function eraseCredentials()
    {
    }

    /** @see \Serializable::serialize() */
    public function serialize()
    {

        return serialize(array(
            $this->id,
            $this->username,
            $this->password
            // see section on salt below
            // $this->salt,
        ));
    }

    /** @see \Serializable::unserialize() */
    public function unserialize($serialized)
    {
        list (
            $this->id,
            $this->username,
            $this->password
            // see section on salt below
            // $this->salt
            ) = unserialize($serialized);
    }
}
